//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMSV2
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SMSV2.ApplicantMessagesServiceSoap")]
    public interface ApplicantMessagesServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Register", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RegisterAsync(string UserName, string Password, string FullName, bool Gender, int CountryId, int CityId, int IdentityTypeId, string IdentityNumber, int NationalityId, string MobileNumber, string JobTitle, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterForMajlis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RegisterForMajlisAsync(string UserName, string Password, string FullName, bool Gender, int CountryId, int CityId, int IdentityTypeId, string IdentityNumber, int NationalityId, string MobileNumber, string JobTitle, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RegisterForTayteen", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> RegisterForTayteenAsync(string FullName, string IdentityNumber, string MobileNumber, string Email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendVerificationCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendVerificationCodeAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendVerificationCodeForapp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendVerificationCodeForappAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendVerificationCodeFortawteen", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<bool> SendVerificationCodeFortawteenAsync(string VerficationCode, string MobileNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendVerificationCode_majlis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> SendVerificationCode_majlisAsync(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuthenticateUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AuthenticateUserAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuthenticateUserforinsert", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AuthenticateUserforinsertAsync(string MobileNumber, string Identitynumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AuthenticateUser_Majlis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AuthenticateUser_MajlisAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateUserVerificationCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ValidateUserVerificationCodeAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApplicantMessages_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ApplicantMessages_AddAsync(string UserID, string Title, string Body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Application_Files_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Application_Files_AddAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApplicantMessages_AddWithAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ApplicantMessages_AddWithAttachmentAsync(string UserID, string Title, string Body, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Addtadiyath", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddtadiyathAsync(string UserID, int sThadiyathTypeID, string sDeedNumber, string sAddress, string sDetails, string sLatitude, string sLongitude);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add_Deed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Add_DeedAsync(string UserID, string sApplicantsName, string sDeedNumber, string sWakeelName, string sDeedDate, string sDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Add_Deed_Add_Files", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Add_Deed_Add_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarraigeNewAdd", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MarraigeNewAddAsync(
                    string UserID, 
                    string FirstName, 
                    string SecondName, 
                    string ThirdName, 
                    string FamilyName, 
                    int SocialNumber, 
                    string DOB, 
                    int NationalityID, 
                    string Job, 
                    string Address, 
                    string WorkingPlace, 
                    int Salary_Monthly, 
                    int QualificationID, 
                    string PhoneNumber, 
                    string MobileNumer, 
                    string FaxNumber, 
                    string EmailAddre, 
                    bool gender, 
                    string NationalID, 
                    int NumberOfChildren, 
                    int Marraige_Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarraigeNewAdd_Files", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MarraigeNewAdd_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddtadiyathFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> AddtadiyathFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Prisoners_Requests_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Prisoners_Requests_AddAsync(string UserID, string PrisonerName, string PrisonerIdentity, string PlaceName, int CaseTypeID, int TypeID, int TempOutReasonID, string Details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Prisoners_Requests_Add_Files", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Prisoners_Requests_Add_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Majlis_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> Majlis_AddAsync(string UserID, int MessageTypeID, string Title, string Body);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MajlisFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MajlisFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OwnerShip_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> OwnerShip_AddAsync(string UserID, int BuildingTypeID, string sArea, string sReligion, string sAddress, string Details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OwnerShipFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> OwnerShipFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventsFormsRequest_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> EventsFormsRequest_AddAsync(string UserID, int TypeID, string ContactNumber, string StartDate, string EndDate, string StartTime, string EndTime, string Place, string PlaceAddress, string ExecutingEntity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventsFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> EventsFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarriageFromMan_User_Request_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MarriageFromMan_User_Request_AddAsync(
                    int StartFrom, 
                    string UserID, 
                    string Requester_FirstName, 
                    string Requester_SecondName, 
                    string Requester_ThirdName, 
                    string Requester_LastName, 
                    string Requester_SocialNumber, 
                    string Requester_DateOfBirth, 
                    string Requester_PlaceOfBirth, 
                    int Requester_OriginalNationalityID, 
                    int Requester_CurrentNationalityID, 
                    string Requester_Job, 
                    string Requester_Address, 
                    string Requester_MotherFirstName, 
                    string Requester_MotherSecondName, 
                    string Requester_MotherThirdName, 
                    string Requester_MotherLastName, 
                    string Requester_ResponsibleFirstName, 
                    string Requester_ResponsibleSecondName, 
                    string Requester_ResponsibleThirdName, 
                    string Requester_ResponsibleLastName, 
                    string Requester_ResponsibleSocialNumber, 
                    string Requester_ResponsibleAddress, 
                    string Requester_ResponsibleRelationship, 
                    int Requester_MedicalStatusID, 
                    string Requester_MedicalStatusComment, 
                    int Requester_EducationalStatusID, 
                    string Requester_EducationalStatusComment, 
                    int Requester_SocialStatusID, 
                    string Requester_DivorceDate, 
                    string Requester_HasbandDeathDate, 
                    bool Relationship_Exists, 
                    int Relationship_TypeID, 
                    string Relationship_OtherDescription, 
                    string Hasband_FirstName, 
                    string Hasband_SecondName, 
                    string Hasband_ThirdName, 
                    string Hasband_LastName, 
                    string Hasband_IdentityNumber, 
                    string Hasband_DateOfBirth, 
                    string Hasband_PlaceOfBirth, 
                    int Hasband_NationalityID, 
                    int Hasband_ReligionID, 
                    string Hasband_Job, 
                    bool Hasband_IsMarried, 
                    string Hasband_ExistanceValidityDate, 
                    string Hasband_KSAArrivalDate, 
                    string Hasband_ExistingPlace, 
                    string Hasband_WorkResponsibleFirstName, 
                    string Hasband_WorkResponsibleSecondName, 
                    string Hasband_WorkResponsibleThirdName, 
                    string Hasband_WorkResponsibleLastName, 
                    string Hasband_WorkResponsibleIdentityNumber, 
                    string Hasband_WorkResponsibleAddress, 
                    string Hasband_WorkResponsiblePhoneNumber, 
                    int Hasband_WivesNO, 
                    int Hasband_ChildrensNO, 
                    string MarriageReason_OtherDescription, 
                    string Hasband_WorkPlace, 
                    string Hasband_WorkMonthlyIncome, 
                    string Hasband_WorkAnnualIncome, 
                    int Hasband_MedicalStatusID, 
                    string Hasband_MedicalStatusComment, 
                    int Hasband_EducationalStatusID, 
                    string Hasband_EducationalStatusComment, 
                    string strDept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/OwnerShipMessages_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> OwnerShipMessages_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuildingEvacuation_Add", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BuildingEvacuation_AddAsync(string UserID, string Area, string Alumdah, int BuildingTypeID, int EvacuationReasonID, string Details);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuildingEvacuation_Add_Files", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BuildingEvacuation_Add_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BuildingEvacuation_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> BuildingEvacuation_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MajlisMessages_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MajlisMessages_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PrisonersMessages_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> PrisonersMessages_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ThadiyathMessages_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ThadiyathMessages_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeedFormsMessages_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> DeedFormsMessages_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/MarraigeFormsMessages_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> MarraigeFormsMessages_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApplicantMessages_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ApplicantMessages_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApplicantMessages_GetByMessageIDAndYear", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ApplicantMessages_GetByMessageIDAndYearAsync(int MessageID, int Year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ApplicantMessages_GetMiddleWareStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ApplicantMessages_GetMiddleWareStatusAsync(int MessageID, string MessageDate, string NIN, string MobileNumber, int ProvinceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBuildingTypeKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetBuildingTypeKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEvacuationReasonsKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetEvacuationReasonsKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOwnerShipKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetOwnerShipKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMarraigeTypeKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetMarraigeTypeKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetRequestTypeForPrisonKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetRequestTypeForPrisonKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCaseTypeForPrisonKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCaseTypeForPrisonKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTempOutReasonsForPrisonKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTempOutReasonsForPrisonKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountriesKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCountriesKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProvinceKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetProvinceKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetProvinceDetailsValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetProvinceDetailsValueAsync(int ProvinceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSocialStatusKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetSocialStatusKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllServicesKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetAllServicesKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetQualoficationKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetQualoficationKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountriesKeyValueList_Majlish", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCountriesKeyValueList_MajlishAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCitiesKeyValueList_Majlish", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCitiesKeyValueList_MajlishAsync(int CountryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCitiesKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetCitiesKeyValueListAsync(int CountryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNationalitiesKeyValueList_Majlis", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetNationalitiesKeyValueList_MajlisAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetNationalitiesKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetNationalitiesKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetIdentificationTypesKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetIdentificationTypesKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTadiyatTypeKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetTadiyatTypeKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetEventsFormTypeKeyValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetEventsFormTypeKeyValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetImageValueList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> GetImageValueListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventsFormsRequest_GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> EventsFormsRequest_GetListAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ElectronicalInquiryByLetterID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> ElectronicalInquiryByLetterIDAsync(string LetterNumber, string Year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ApplicantMessagesServiceSoapChannel : SMSV2.ApplicantMessagesServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ApplicantMessagesServiceSoapClient : System.ServiceModel.ClientBase<SMSV2.ApplicantMessagesServiceSoap>, SMSV2.ApplicantMessagesServiceSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ApplicantMessagesServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ApplicantMessagesServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), ApplicantMessagesServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ApplicantMessagesServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ApplicantMessagesServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ApplicantMessagesServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ApplicantMessagesServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ApplicantMessagesServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string UserName, string Password, string FullName, bool Gender, int CountryId, int CityId, int IdentityTypeId, string IdentityNumber, int NationalityId, string MobileNumber, string JobTitle, string Email)
        {
            return base.Channel.RegisterAsync(UserName, Password, FullName, Gender, CountryId, CityId, IdentityTypeId, IdentityNumber, NationalityId, MobileNumber, JobTitle, Email);
        }
        
        public System.Threading.Tasks.Task<string> RegisterForMajlisAsync(string UserName, string Password, string FullName, bool Gender, int CountryId, int CityId, int IdentityTypeId, string IdentityNumber, int NationalityId, string MobileNumber, string JobTitle, string Email)
        {
            return base.Channel.RegisterForMajlisAsync(UserName, Password, FullName, Gender, CountryId, CityId, IdentityTypeId, IdentityNumber, NationalityId, MobileNumber, JobTitle, Email);
        }
        
        public System.Threading.Tasks.Task<string> RegisterForTayteenAsync(string FullName, string IdentityNumber, string MobileNumber, string Email)
        {
            return base.Channel.RegisterForTayteenAsync(FullName, IdentityNumber, MobileNumber, Email);
        }
        
        public System.Threading.Tasks.Task<string> SendVerificationCodeAsync(string UserName)
        {
            return base.Channel.SendVerificationCodeAsync(UserName);
        }
        
        public System.Threading.Tasks.Task<string> SendVerificationCodeForappAsync(string UserName)
        {
            return base.Channel.SendVerificationCodeForappAsync(UserName);
        }
        
        public System.Threading.Tasks.Task<bool> SendVerificationCodeFortawteenAsync(string VerficationCode, string MobileNumber)
        {
            return base.Channel.SendVerificationCodeFortawteenAsync(VerficationCode, MobileNumber);
        }
        
        public System.Threading.Tasks.Task<string> SendVerificationCode_majlisAsync(string UserName)
        {
            return base.Channel.SendVerificationCode_majlisAsync(UserName);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserAsync(string Username, string Password)
        {
            return base.Channel.AuthenticateUserAsync(Username, Password);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUserforinsertAsync(string MobileNumber, string Identitynumber)
        {
            return base.Channel.AuthenticateUserforinsertAsync(MobileNumber, Identitynumber);
        }
        
        public System.Threading.Tasks.Task<string> AuthenticateUser_MajlisAsync(string Username, string Password)
        {
            return base.Channel.AuthenticateUser_MajlisAsync(Username, Password);
        }
        
        public System.Threading.Tasks.Task<string> ValidateUserVerificationCodeAsync(string Code)
        {
            return base.Channel.ValidateUserVerificationCodeAsync(Code);
        }
        
        public System.Threading.Tasks.Task<string> ApplicantMessages_AddAsync(string UserID, string Title, string Body)
        {
            return base.Channel.ApplicantMessages_AddAsync(UserID, Title, Body);
        }
        
        public System.Threading.Tasks.Task<string> Application_Files_AddAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.Application_Files_AddAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> ApplicantMessages_AddWithAttachmentAsync(string UserID, string Title, string Body, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.ApplicantMessages_AddWithAttachmentAsync(UserID, Title, Body, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> AddtadiyathAsync(string UserID, int sThadiyathTypeID, string sDeedNumber, string sAddress, string sDetails, string sLatitude, string sLongitude)
        {
            return base.Channel.AddtadiyathAsync(UserID, sThadiyathTypeID, sDeedNumber, sAddress, sDetails, sLatitude, sLongitude);
        }
        
        public System.Threading.Tasks.Task<string> Add_DeedAsync(string UserID, string sApplicantsName, string sDeedNumber, string sWakeelName, string sDeedDate, string sDetails)
        {
            return base.Channel.Add_DeedAsync(UserID, sApplicantsName, sDeedNumber, sWakeelName, sDeedDate, sDetails);
        }
        
        public System.Threading.Tasks.Task<string> Add_Deed_Add_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.Add_Deed_Add_FilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> MarraigeNewAddAsync(
                    string UserID, 
                    string FirstName, 
                    string SecondName, 
                    string ThirdName, 
                    string FamilyName, 
                    int SocialNumber, 
                    string DOB, 
                    int NationalityID, 
                    string Job, 
                    string Address, 
                    string WorkingPlace, 
                    int Salary_Monthly, 
                    int QualificationID, 
                    string PhoneNumber, 
                    string MobileNumer, 
                    string FaxNumber, 
                    string EmailAddre, 
                    bool gender, 
                    string NationalID, 
                    int NumberOfChildren, 
                    int Marraige_Type)
        {
            return base.Channel.MarraigeNewAddAsync(UserID, FirstName, SecondName, ThirdName, FamilyName, SocialNumber, DOB, NationalityID, Job, Address, WorkingPlace, Salary_Monthly, QualificationID, PhoneNumber, MobileNumer, FaxNumber, EmailAddre, gender, NationalID, NumberOfChildren, Marraige_Type);
        }
        
        public System.Threading.Tasks.Task<string> MarraigeNewAdd_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.MarraigeNewAdd_FilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> AddtadiyathFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.AddtadiyathFilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> Prisoners_Requests_AddAsync(string UserID, string PrisonerName, string PrisonerIdentity, string PlaceName, int CaseTypeID, int TypeID, int TempOutReasonID, string Details)
        {
            return base.Channel.Prisoners_Requests_AddAsync(UserID, PrisonerName, PrisonerIdentity, PlaceName, CaseTypeID, TypeID, TempOutReasonID, Details);
        }
        
        public System.Threading.Tasks.Task<string> Prisoners_Requests_Add_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.Prisoners_Requests_Add_FilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> Majlis_AddAsync(string UserID, int MessageTypeID, string Title, string Body)
        {
            return base.Channel.Majlis_AddAsync(UserID, MessageTypeID, Title, Body);
        }
        
        public System.Threading.Tasks.Task<string> MajlisFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.MajlisFilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> OwnerShip_AddAsync(string UserID, int BuildingTypeID, string sArea, string sReligion, string sAddress, string Details)
        {
            return base.Channel.OwnerShip_AddAsync(UserID, BuildingTypeID, sArea, sReligion, sAddress, Details);
        }
        
        public System.Threading.Tasks.Task<string> OwnerShipFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.OwnerShipFilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> EventsFormsRequest_AddAsync(string UserID, int TypeID, string ContactNumber, string StartDate, string EndDate, string StartTime, string EndTime, string Place, string PlaceAddress, string ExecutingEntity)
        {
            return base.Channel.EventsFormsRequest_AddAsync(UserID, TypeID, ContactNumber, StartDate, EndDate, StartTime, EndTime, Place, PlaceAddress, ExecutingEntity);
        }
        
        public System.Threading.Tasks.Task<string> EventsFilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.EventsFilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> MarriageFromMan_User_Request_AddAsync(
                    int StartFrom, 
                    string UserID, 
                    string Requester_FirstName, 
                    string Requester_SecondName, 
                    string Requester_ThirdName, 
                    string Requester_LastName, 
                    string Requester_SocialNumber, 
                    string Requester_DateOfBirth, 
                    string Requester_PlaceOfBirth, 
                    int Requester_OriginalNationalityID, 
                    int Requester_CurrentNationalityID, 
                    string Requester_Job, 
                    string Requester_Address, 
                    string Requester_MotherFirstName, 
                    string Requester_MotherSecondName, 
                    string Requester_MotherThirdName, 
                    string Requester_MotherLastName, 
                    string Requester_ResponsibleFirstName, 
                    string Requester_ResponsibleSecondName, 
                    string Requester_ResponsibleThirdName, 
                    string Requester_ResponsibleLastName, 
                    string Requester_ResponsibleSocialNumber, 
                    string Requester_ResponsibleAddress, 
                    string Requester_ResponsibleRelationship, 
                    int Requester_MedicalStatusID, 
                    string Requester_MedicalStatusComment, 
                    int Requester_EducationalStatusID, 
                    string Requester_EducationalStatusComment, 
                    int Requester_SocialStatusID, 
                    string Requester_DivorceDate, 
                    string Requester_HasbandDeathDate, 
                    bool Relationship_Exists, 
                    int Relationship_TypeID, 
                    string Relationship_OtherDescription, 
                    string Hasband_FirstName, 
                    string Hasband_SecondName, 
                    string Hasband_ThirdName, 
                    string Hasband_LastName, 
                    string Hasband_IdentityNumber, 
                    string Hasband_DateOfBirth, 
                    string Hasband_PlaceOfBirth, 
                    int Hasband_NationalityID, 
                    int Hasband_ReligionID, 
                    string Hasband_Job, 
                    bool Hasband_IsMarried, 
                    string Hasband_ExistanceValidityDate, 
                    string Hasband_KSAArrivalDate, 
                    string Hasband_ExistingPlace, 
                    string Hasband_WorkResponsibleFirstName, 
                    string Hasband_WorkResponsibleSecondName, 
                    string Hasband_WorkResponsibleThirdName, 
                    string Hasband_WorkResponsibleLastName, 
                    string Hasband_WorkResponsibleIdentityNumber, 
                    string Hasband_WorkResponsibleAddress, 
                    string Hasband_WorkResponsiblePhoneNumber, 
                    int Hasband_WivesNO, 
                    int Hasband_ChildrensNO, 
                    string MarriageReason_OtherDescription, 
                    string Hasband_WorkPlace, 
                    string Hasband_WorkMonthlyIncome, 
                    string Hasband_WorkAnnualIncome, 
                    int Hasband_MedicalStatusID, 
                    string Hasband_MedicalStatusComment, 
                    int Hasband_EducationalStatusID, 
                    string Hasband_EducationalStatusComment, 
                    string strDept)
        {
            return base.Channel.MarriageFromMan_User_Request_AddAsync(StartFrom, UserID, Requester_FirstName, Requester_SecondName, Requester_ThirdName, Requester_LastName, Requester_SocialNumber, Requester_DateOfBirth, Requester_PlaceOfBirth, Requester_OriginalNationalityID, Requester_CurrentNationalityID, Requester_Job, Requester_Address, Requester_MotherFirstName, Requester_MotherSecondName, Requester_MotherThirdName, Requester_MotherLastName, Requester_ResponsibleFirstName, Requester_ResponsibleSecondName, Requester_ResponsibleThirdName, Requester_ResponsibleLastName, Requester_ResponsibleSocialNumber, Requester_ResponsibleAddress, Requester_ResponsibleRelationship, Requester_MedicalStatusID, Requester_MedicalStatusComment, Requester_EducationalStatusID, Requester_EducationalStatusComment, Requester_SocialStatusID, Requester_DivorceDate, Requester_HasbandDeathDate, Relationship_Exists, Relationship_TypeID, Relationship_OtherDescription, Hasband_FirstName, Hasband_SecondName, Hasband_ThirdName, Hasband_LastName, Hasband_IdentityNumber, Hasband_DateOfBirth, Hasband_PlaceOfBirth, Hasband_NationalityID, Hasband_ReligionID, Hasband_Job, Hasband_IsMarried, Hasband_ExistanceValidityDate, Hasband_KSAArrivalDate, Hasband_ExistingPlace, Hasband_WorkResponsibleFirstName, Hasband_WorkResponsibleSecondName, Hasband_WorkResponsibleThirdName, Hasband_WorkResponsibleLastName, Hasband_WorkResponsibleIdentityNumber, Hasband_WorkResponsibleAddress, Hasband_WorkResponsiblePhoneNumber, Hasband_WivesNO, Hasband_ChildrensNO, MarriageReason_OtherDescription, Hasband_WorkPlace, Hasband_WorkMonthlyIncome, Hasband_WorkAnnualIncome, Hasband_MedicalStatusID, Hasband_MedicalStatusComment, Hasband_EducationalStatusID, Hasband_EducationalStatusComment, strDept);
        }
        
        public System.Threading.Tasks.Task<string> OwnerShipMessages_GetListAsync(string UserID)
        {
            return base.Channel.OwnerShipMessages_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> BuildingEvacuation_AddAsync(string UserID, string Area, string Alumdah, int BuildingTypeID, int EvacuationReasonID, string Details)
        {
            return base.Channel.BuildingEvacuation_AddAsync(UserID, Area, Alumdah, BuildingTypeID, EvacuationReasonID, Details);
        }
        
        public System.Threading.Tasks.Task<string> BuildingEvacuation_Add_FilesAsync(int RequestID, string FileName, string FileTitle, string FileContentType, string FileBytes)
        {
            return base.Channel.BuildingEvacuation_Add_FilesAsync(RequestID, FileName, FileTitle, FileContentType, FileBytes);
        }
        
        public System.Threading.Tasks.Task<string> BuildingEvacuation_GetListAsync(string UserID)
        {
            return base.Channel.BuildingEvacuation_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> MajlisMessages_GetListAsync(string UserID)
        {
            return base.Channel.MajlisMessages_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> PrisonersMessages_GetListAsync(string UserID)
        {
            return base.Channel.PrisonersMessages_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> ThadiyathMessages_GetListAsync(string UserID)
        {
            return base.Channel.ThadiyathMessages_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> DeedFormsMessages_GetListAsync(string UserID)
        {
            return base.Channel.DeedFormsMessages_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> MarraigeFormsMessages_GetListAsync(string UserID)
        {
            return base.Channel.MarraigeFormsMessages_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> ApplicantMessages_GetListAsync(string UserID)
        {
            return base.Channel.ApplicantMessages_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> ApplicantMessages_GetByMessageIDAndYearAsync(int MessageID, int Year)
        {
            return base.Channel.ApplicantMessages_GetByMessageIDAndYearAsync(MessageID, Year);
        }
        
        public System.Threading.Tasks.Task<string> ApplicantMessages_GetMiddleWareStatusAsync(int MessageID, string MessageDate, string NIN, string MobileNumber, int ProvinceID)
        {
            return base.Channel.ApplicantMessages_GetMiddleWareStatusAsync(MessageID, MessageDate, NIN, MobileNumber, ProvinceID);
        }
        
        public System.Threading.Tasks.Task<string> GetBuildingTypeKeyValueListAsync()
        {
            return base.Channel.GetBuildingTypeKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetEvacuationReasonsKeyValueListAsync()
        {
            return base.Channel.GetEvacuationReasonsKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetOwnerShipKeyValueListAsync()
        {
            return base.Channel.GetOwnerShipKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetMarraigeTypeKeyValueListAsync()
        {
            return base.Channel.GetMarraigeTypeKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetRequestTypeForPrisonKeyValueListAsync()
        {
            return base.Channel.GetRequestTypeForPrisonKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetCaseTypeForPrisonKeyValueListAsync()
        {
            return base.Channel.GetCaseTypeForPrisonKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetTempOutReasonsForPrisonKeyValueListAsync()
        {
            return base.Channel.GetTempOutReasonsForPrisonKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetCountriesKeyValueListAsync()
        {
            return base.Channel.GetCountriesKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetProvinceKeyValueListAsync()
        {
            return base.Channel.GetProvinceKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetProvinceDetailsValueAsync(int ProvinceID)
        {
            return base.Channel.GetProvinceDetailsValueAsync(ProvinceID);
        }
        
        public System.Threading.Tasks.Task<string> GetSocialStatusKeyValueListAsync()
        {
            return base.Channel.GetSocialStatusKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetAllServicesKeyValueListAsync()
        {
            return base.Channel.GetAllServicesKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetQualoficationKeyValueListAsync()
        {
            return base.Channel.GetQualoficationKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetCountriesKeyValueList_MajlishAsync()
        {
            return base.Channel.GetCountriesKeyValueList_MajlishAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetCitiesKeyValueList_MajlishAsync(int CountryID)
        {
            return base.Channel.GetCitiesKeyValueList_MajlishAsync(CountryID);
        }
        
        public System.Threading.Tasks.Task<string> GetCitiesKeyValueListAsync(int CountryID)
        {
            return base.Channel.GetCitiesKeyValueListAsync(CountryID);
        }
        
        public System.Threading.Tasks.Task<string> GetNationalitiesKeyValueList_MajlisAsync()
        {
            return base.Channel.GetNationalitiesKeyValueList_MajlisAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetNationalitiesKeyValueListAsync()
        {
            return base.Channel.GetNationalitiesKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetIdentificationTypesKeyValueListAsync()
        {
            return base.Channel.GetIdentificationTypesKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetTadiyatTypeKeyValueListAsync()
        {
            return base.Channel.GetTadiyatTypeKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetEventsFormTypeKeyValueListAsync()
        {
            return base.Channel.GetEventsFormTypeKeyValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> GetImageValueListAsync()
        {
            return base.Channel.GetImageValueListAsync();
        }
        
        public System.Threading.Tasks.Task<string> EventsFormsRequest_GetListAsync(string UserID)
        {
            return base.Channel.EventsFormsRequest_GetListAsync(UserID);
        }
        
        public System.Threading.Tasks.Task<string> ElectronicalInquiryByLetterIDAsync(string LetterNumber, string Year)
        {
            return base.Channel.ElectronicalInquiryByLetterIDAsync(LetterNumber, Year);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ApplicantMessagesServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ApplicantMessagesServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ApplicantMessagesServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://212.70.49.36:7777/ApplicantMessagesService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ApplicantMessagesServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://212.70.49.36:7777/ApplicantMessagesService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ApplicantMessagesServiceSoap,
            
            ApplicantMessagesServiceSoap12,
        }
    }
}
